name: Build

on:
  [workflow_dispatch]

jobs:
  build:
    name: Build and test
    runs-on: macos-12
    env:
      DERIVED_DATA_PATH: 'DerivedData'
      DEVICE: 'iPhone 12 Pro'
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      - name: Run process.sh script
        run: |
          ./Scripts/process.sh
          exit $?
      - name: Create CloudAccessSecrets
        run: ./create-cloud-access-secrets-file.sh
#      - name: List files 0
#        run: |
#          find / -type f -name "*.swift" 2> /dev/null
#          ls ${{ github.workspace }}
#      - name: Build (original)
#        run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild clean build-for-testing -scheme 'AllTests' -destination "name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH -enableCodeCoverage YES | xcpretty
      - name: Build (mod)
        run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild clean build-for-testing -scheme 'AllTests' -destination "name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH -archivePath /Users/runner/work/ios/ios/Cryptomator.xcarchive -enableCodeCoverage YES | xcpretty
      - name: Export IPA
        run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -exportArchive -archivePath /Users/runner/work/ios/ios/Cryptomator.xcarchive -exportPath /Users/runner/work/ios/ios/Cryptomator.xcarchive/Cryptomator.ipa -exportOptionsPlist /Users/runner/work/ios/ios/exportOptions.plist | xcpretty
#      - name: Test
#        run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild test-without-building -xctestrun $(find . -type f -name "*.xctestrun") -destination "name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH | xcpretty
#      - name: Upload code coverage report
#        run: |
#          gem install slather
#          slather coverage -x  --build-directory $DERIVED_DATA_PATH --ignore "$DERIVED_DATA_PATH/SourcePackages/*" --scheme AllTests Cryptomator.xcodeproj
#          bash <(curl -Ls https://coverage.codacy.com/get.sh)
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with: 
          name: assets-for-download
          path: /Users/runner/work/ios/ios/Cryptomator.xcarchive
      - name: List files 2
        run: |
          ls ${{ github.workspace }}
      - name: List files 1
        run: |
          find /Users/runner/work/ -type f -name "*.ipa" 2> /dev/null
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        continue-on-error: true
